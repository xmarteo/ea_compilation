.data                  
globals:               
.space 16           
heap_info:
	.space 12
    .text                 
main:                 
la    $gp, globals    
# allocate the heap   
li    $a0, 65536        
li    $v0, 9          
syscall               
# saving heap size    
move  $a2, $a0        
# computing heap_info 
la    $a0, heap_info  
# beginning of heap   
sw    $v0, 0($a0)     
# current position    
sw    $v0, 4($a0)     
# end of heap         
add   $a2, $a2, $v0   
sw    $a2, 8($a0)     
j     _main38              
write:                
li    $v0, 1          
syscall               
j     $ra             
.data                 
nl:                   
.asciiz "\n"       
.align 2              
.text                 
writeln:              
li    $v0, 1          
syscall               
la    $a0, nl         
li    $v0, 4          
syscall               
j     $ra             
readln:               
li    $v0, 5          
syscall               
j     $ra             
alloc:                
la    $a1, heap_info  
# adding extra word   
addi  $t1, $a0, 4     
# current position    
lw    $v0, 4($a1)     
move  $t0, $v0        
# end of the heap     
lw    $a2, 8($a1)     
add   $v0, $t1, $v0   
# must have v0<=a2    
bgt   $v0, $a2, oom   
sw    $v0, 4($a1)     
# length is written   
move  $v0, $t0        
div   $a0, $a0, 4     
sw    $a0, 0($v0)     
addi  $v0, $v0, 4     
j     $ra             
.data                 
error_str:            
.asciiz "out0fMem"  
.align 2              
.text                 
oom:                  
# means out of mem.   
la $a0, error_str     
li $v0, 4             
syscall               
li $v0, 10            
syscall               
j     $ra             

# begin mread
mread69:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s3, $a0
addiu $a0, $s3, -1
li    $v0, 2
div   $a0, $a0, $v0
jal   malloc46
move  $s0, $v0
li    $s2, 1
mread48:
addiu $a0, $s2, -1
li    $v0, 2
div   $a1, $a0, $v0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, mread40
move  $v0, $s0
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
mread40:
li    $s1, 1
mread39:
addiu $a0, $s1, -1
li    $v0, 2
div   $a1, $a0, $v0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, mread83
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s2, $v0, 3
j     mread48
mread83:
jal   readln
sll   $v0, $v0, 1
addiu $a0, $v0, 1
addiu $a1, $s2, -1
li    $v0, 2
div   $v0, $a1, $v0
sll   $v0, $v0, 2
addu  $v0, $s0, $v0
lw    $a1, 0($v0)
addiu $a2, $s1, -1
li    $v0, 2
div   $v0, $a2, $v0
sll   $a2, $v0, 2
addu  $a1, $a1, $a2
addiu $a2, $a0, -1
li    $a0, 2
div   $a0, $a2, $a0
sw    $a0, 0($a1)
sll   $v0, $v0, 1
addiu $s1, $v0, 3
j     mread39
# end mread

# begin mmult
mmult116:
addiu $sp, $sp, -16
sw    $ra, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s0, $a0
move  $s1, $a1
move  $s2, $a2
addiu $a0, $s0, -1
li    $v0, 2
div   $a0, $a0, $v0
jal   malloc46
li    $a2, 1
mmult92:
addiu $a1, $a2, -1
li    $a0, 2
div   $a3, $a1, $a0
addiu $a1, $s0, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a0, $a3, $a0
bgtz  $a0, mmult84
lw    $ra, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 16
jr    $ra
mmult84:
li    $a3, 1
mmult83:
addiu $a1, $a3, -1
li    $a0, 2
div   $t0, $a1, $a0
addiu $a1, $s0, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a0, $t0, $a0
bgtz  $a0, mmult75
addiu $a1, $a2, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 1
addiu $a2, $a0, 3
j     mmult92
mmult75:
li    $a1, 1
li    $a0, 1
mmult73:
addiu $t0, $a0, -1
li    $a0, 2
div   $a0, $t0, $a0
addiu $t1, $s0, -1
li    $t0, 2
div   $t0, $t1, $t0
slt   $t0, $a0, $t0
bgtz  $t0, mmult65
addiu $t0, $a2, -1
li    $a0, 2
div   $a0, $t0, $a0
sll   $a0, $a0, 2
addu  $a0, $v0, $a0
lw    $t0, 0($a0)
addiu $a3, $a3, -1
li    $a0, 2
div   $a0, $a3, $a0
sll   $a3, $a0, 2
addu  $a3, $t0, $a3
addiu $t0, $a1, -1
li    $a1, 2
div   $a1, $t0, $a1
sw    $a1, 0($a3)
sll   $a0, $a0, 1
addiu $a3, $a0, 3
j     mmult83
mmult65:
addiu $t0, $a1, -1
li    $a1, 2
div   $t0, $t0, $a1
addiu $t1, $a2, -1
li    $a1, 2
div   $a1, $t1, $a1
sll   $a1, $a1, 2
addu  $a1, $s1, $a1
lw    $t1, 0($a1)
sll   $a1, $a0, 2
addu  $t1, $t1, $a1
lw    $t1, 0($t1)
addu  $a1, $s2, $a1
lw    $t3, 0($a1)
addiu $t2, $a3, -1
li    $a1, 2
div   $a1, $t2, $a1
sll   $a1, $a1, 2
addu  $a1, $t3, $a1
lw    $a1, 0($a1)
mul   $a1, $t1, $a1
addu  $a1, $t0, $a1
sll   $a1, $a1, 1
addiu $a1, $a1, 1
sll   $a0, $a0, 1
addiu $a0, $a0, 3
j     mmult73
# end mmult

# begin malloc
malloc46:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s3, $a0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $a0, $v0, 2
jal   alloc
move  $s1, $v0
li    $s2, 1
malloc26:
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $s3, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a1, $v0, $a0
bgtz  $a1, malloc15
move  $v0, $s1
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
malloc15:
sll   $v0, $v0, 2
addu  $s0, $s1, $v0
sll   $a0, $a0, 2
jal   alloc
sw    $v0, 0($s0)
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s2, $v0, 3
j     malloc26
# end malloc

# begin affiche
affiche57:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s2, $a0
move  $s3, $a1
li    $s1, 1
affiche42:
addiu $a0, $s1, -1
li    $v0, 2
div   $a1, $a0, $v0
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, affiche34
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
affiche34:
li    $s0, 1
affiche33:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $s2, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a0, $v0, $a0
bgtz  $a0, affiche25
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 3
j     affiche42
affiche25:
addiu $a1, $s1, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 2
addu  $a0, $s3, $a0
lw    $a0, 0($a0)
sll   $v0, $v0, 2
addu  $v0, $a0, $v0
lw    $a0, 0($v0)
jal   writeln
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, 3
j     affiche33
# end affiche

# begin _main
_main38:
addiu $sp, $sp, -8
sw    $ra, 4($sp)
sw    $s0, 0($sp)
jal   readln
sll   $v0, $v0, 1
addiu $v0, $v0, 1
sw    $v0, 4($gp)
lw    $v0, 4($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $a0, $a0, $v0
jal   mread69
sw    $v0, 0($gp)
lw    $v0, 4($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $a0, $a0, $v0
jal   mread69
sw    $v0, 8($gp)
lw    $v0, 4($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $s0, $a0, $v0
lw    $a1, 0($gp)
lw    $a2, 8($gp)
move  $a0, $s0
jal   mmult116
move  $a0, $s0
move  $a1, $v0
lw    $ra, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 8
j     affiche57
# end _main
