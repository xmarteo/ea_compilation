.data                  
globals:               
.space 0           
heap_info:
	.space 12
    .text                 
main:                 
la    $gp, globals    
# allocate the heap   
li    $a0, 65536        
li    $v0, 9          
syscall               
# saving heap size    
move  $a2, $a0        
# computing heap_info 
la    $a0, heap_info  
# beginning of heap   
sw    $v0, 0($a0)     
# current position    
sw    $v0, 4($a0)     
# end of heap         
add   $a2, $a2, $v0   
sw    $a2, 8($a0)     
j     _main15              
write:                
li    $v0, 1          
syscall               
j     $ra             
.data                 
nl:                   
.asciiz "\n"       
.align 2              
.text                 
writeln:              
li    $v0, 1          
syscall               
la    $a0, nl         
li    $v0, 4          
syscall               
j     $ra             
readln:               
li    $v0, 5          
syscall               
j     $ra             
alloc:                
la    $a1, heap_info  
# adding extra word   
addi  $t1, $a0, 4     
# current position    
lw    $v0, 4($a1)     
move  $t0, $v0        
# end of the heap     
lw    $a2, 8($a1)     
add   $v0, $t1, $v0   
# must have v0<=a2    
bgt   $v0, $a2, oom   
sw    $v0, 4($a1)     
# length is written   
move  $v0, $t0        
div   $a0, $a0, 4     
sw    $a0, 0($v0)     
addi  $v0, $v0, 4     
j     $ra             
.data                 
error_str:            
.asciiz "out0fMem"  
.align 2              
.text                 
oom:                  
# means out of mem.   
la $a0, error_str     
li $v0, 4             
syscall               
li $v0, 10            
syscall               
j     $ra             

# begin tak
tak25:
addiu $sp, $sp, -24
sw    $ra, 20($sp)
sw    $s4, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s2, $a0
move  $s3, $a1
move  $s4, $a2
slt   $v0, $s3, $s2
bgtz  $v0, tak9
tak37:
move  $v0, $s4
lw    $ra, 20($sp)
lw    $s4, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 24
jr    $ra
tak9:
addiu $a0, $s2, -1
move  $a1, $s3
move  $a2, $s4
jal   tak25
move  $s1, $v0
addiu $a0, $s3, -1
move  $a1, $s4
move  $a2, $s2
jal   tak25
move  $s0, $v0
addiu $a0, $s4, -1
move  $a1, $s2
move  $a2, $s3
jal   tak25
move  $a0, $s1
move  $a1, $s0
move  $a2, $v0
jal   tak25
addiu $s4, $v0, 1
j     tak37
# end tak

# begin _main
_main15:
addiu $sp, $sp, -4
sw    $ra, 0($sp)
li    $a0, 18
li    $a1, 12
li    $a2, 6
jal   tak25
move  $a0, $v0
lw    $ra, 0($sp)
addiu $sp, $sp, 4
j     writeln
# end _main
