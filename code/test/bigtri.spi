.data                  
globals:               
.space 8           
heap_info:
	.space 12
    .text                 
main:                 
la    $gp, globals    
# allocate the heap   
li    $a0, 65536        
li    $v0, 9          
syscall               
# saving heap size    
move  $a2, $a0        
# computing heap_info 
la    $a0, heap_info  
# beginning of heap   
sw    $v0, 0($a0)     
# current position    
sw    $v0, 4($a0)     
# end of heap         
add   $a2, $a2, $v0   
sw    $a2, 8($a0)     
j     _main23              
write:                
li    $v0, 1          
syscall               
j     $ra             
.data                 
nl:                   
.asciiz "\n"       
.align 2              
.text                 
writeln:              
li    $v0, 1          
syscall               
la    $a0, nl         
li    $v0, 4          
syscall               
j     $ra             
readln:               
li    $v0, 5          
syscall               
j     $ra             
alloc:                
la    $a1, heap_info  
# adding extra word   
addi  $t1, $a0, 4     
# current position    
lw    $v0, 4($a1)     
move  $t0, $v0        
# end of the heap     
lw    $a2, 8($a1)     
add   $v0, $t1, $v0   
# must have v0<=a2    
bgt   $v0, $a2, oom   
sw    $v0, 4($a1)     
# length is written   
move  $v0, $t0        
div   $a0, $a0, 4     
sw    $a0, 0($v0)     
addi  $v0, $v0, 4     
j     $ra             
.data                 
error_str:            
.asciiz "out0fMem"  
.align 2              
.text                 
oom:                  
# means out of mem.   
la $a0, error_str     
li $v0, 4             
syscall               
li $v0, 10            
syscall               
j     $ra             

# begin triangle
triangle108:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s3, $a0
li    $s1, 1
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 2
addiu $a0, $v0, 4
jal   alloc
move  $s2, $v0
triangle87:
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $s3, -1
li    $a0, 2
div   $a0, $a1, $a0
sle   $a0, $v0, $a0
bgtz  $a0, triangle76
li    $s0, 1
triangle23:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $s3, -1
li    $a0, 2
div   $a0, $a1, $a0
sle   $a0, $v0, $a0
bgtz  $a0, triangle12
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
triangle12:
sll   $v0, $v0, 2
addu  $v0, $s2, $v0
lw    $v0, 0($v0)
sll   $v0, $v0, 1
addiu $a0, $v0, 1
jal   affiche41
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, 3
j     triangle23
triangle76:
sll   $v0, $v0, 1
addiu $s0, $v0, -1
triangle74:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
bgtz  $v0, triangle67
li    $a0, 3
jal   grandir60
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sw    $v0, 0($s2)
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 2
addu  $s0, $s2, $v0
li    $a0, 3
jal   grandir60
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sw    $v0, 0($s0)
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 3
j     triangle87
triangle67:
sll   $v0, $v0, 2
addu  $v0, $s2, $v0
lw    $a0, 0($v0)
sll   $a0, $a0, 1
addiu $a0, $a0, 1
lw    $v0, -4($v0)
sll   $v0, $v0, 1
addiu $a1, $v0, 1
jal   bigadd200
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, -1
j     triangle74
# end triangle

# begin modulo
modulo30:
addiu $a0, $a0, -1
li    $v0, 2
div   $a0, $a0, $v0
addiu $a1, $a1, -1
li    $v0, 2
div   $v0, $a1, $v0
div   $a1, $a0, $v0
mul   $v0, $a1, $v0
subu  $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $v0, $v0, 1
jr    $ra
# end modulo

# begin grandir
grandir60:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s3, $a0
lw    $v0, 0($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 2
addiu $a0, $v0, 4
jal   alloc
move  $s1, $v0
li    $s2, 1
grandir38:
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
bgtz  $v0, grandir34
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
sw    $v0, 0($s1)
move  $v0, $s1
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
grandir34:
addiu $a1, $s2, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 1
addiu $s2, $a0, 3
addiu $a1, $s2, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 2
addu  $s0, $s1, $a0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
li    $a1, 21
jal   modulo30
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sw    $v0, 0($s0)
addiu $a0, $s3, -1
li    $v0, 2
div   $a0, $a0, $v0
li    $v0, 10
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s3, $v0, 1
j     grandir38
# end grandir

# begin copy
copy38:
lw    $v0, 0($a1)
sll   $v0, $v0, 1
addiu $v0, $v0, 1
copy22:
addiu $a2, $v0, -1
li    $v0, 2
div   $v0, $a2, $v0
bgez  $v0, copy15
jr    $ra
copy15:
sll   $a2, $v0, 2
addu  $a3, $a0, $a2
addu  $a2, $a1, $a2
lw    $a2, 0($a2)
sw    $a2, 0($a3)
sll   $v0, $v0, 1
addiu $v0, $v0, -1
j     copy22
# end copy

# begin bigadd
bigadd200:
addiu $sp, $sp, -28
sw    $ra, 24($sp)
sw    $s5, 20($sp)
sw    $s4, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s4, $a0
move  $s5, $a1
lw    $v0, 0($s4)
lw    $a0, 0($s5)
slt   $a1, $v0, $a0
bgtz  $a1, bigadd180
sll   $v0, $a0, 1
addiu $s2, $v0, 1
bigadd175:
li    $s3, 3
li    $s1, 1
bigadd173:
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $s2, -1
li    $a0, 2
div   $a0, $a1, $a0
sle   $a0, $v0, $a0
bgtz  $a0, bigadd162
bigadd117:
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
lw    $a0, 0($s4)
sle   $a0, $v0, $a0
bgtz  $a0, bigadd108
bigadd70:
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
lw    $a0, 0($s5)
sle   $a0, $v0, $a0
bgtz  $a0, bigadd61
addiu $a1, $s1, -1
li    $a0, 2
div   $a0, $a1, $a0
beq   $a0, $zero, bigadd15
sll   $a1, $v0, 2
addu  $a1, $s4, $a1
sw    $a0, 0($a1)
sw    $v0, 0($s4)
bigadd211:
lw    $ra, 24($sp)
lw    $s5, 20($sp)
lw    $s4, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 28
jr    $ra
bigadd15:
addiu $v0, $v0, -1
sw    $v0, 0($s4)
j     bigadd211
bigadd61:
sll   $v0, $v0, 2
addu  $a0, $s5, $v0
lw    $a0, 0($a0)
addiu $a2, $s1, -1
li    $a1, 2
div   $a1, $a2, $a1
addu  $a0, $a0, $a1
sll   $a0, $a0, 1
addiu $s1, $a0, 1
addu  $s0, $s4, $v0
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
li    $a1, 21
jal   modulo30
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sw    $v0, 0($s0)
addiu $a0, $s1, -1
li    $v0, 2
div   $a0, $a0, $v0
li    $v0, 10
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 1
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s3, $v0, 3
j     bigadd70
bigadd108:
sll   $v0, $v0, 2
addu  $s0, $s4, $v0
lw    $v0, 0($s0)
addiu $a1, $s1, -1
li    $a0, 2
div   $a0, $a1, $a0
addu  $v0, $v0, $a0
sll   $v0, $v0, 1
addiu $s1, $v0, 1
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
li    $a1, 21
jal   modulo30
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sw    $v0, 0($s0)
addiu $a0, $s1, -1
li    $v0, 2
div   $a0, $a0, $v0
li    $v0, 10
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 1
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s3, $v0, 3
j     bigadd117
bigadd162:
sll   $v0, $v0, 2
addu  $s0, $s4, $v0
lw    $a0, 0($s0)
addu  $v0, $s5, $v0
lw    $v0, 0($v0)
addu  $v0, $a0, $v0
addiu $a1, $s1, -1
li    $a0, 2
div   $a0, $a1, $a0
addu  $v0, $v0, $a0
sll   $v0, $v0, 1
addiu $s1, $v0, 1
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
li    $a1, 21
jal   modulo30
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sw    $v0, 0($s0)
addiu $a0, $s1, -1
li    $v0, 2
div   $a0, $a0, $v0
li    $v0, 10
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 1
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s3, $v0, 3
j     bigadd173
bigadd180:
sll   $v0, $v0, 1
addiu $s2, $v0, 1
j     bigadd175
# end bigadd

# begin affiche
affiche41:
addiu $sp, $sp, -12
sw    $ra, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s1, $a0
lw    $v0, 0($s1)
sll   $v0, $v0, 1
addiu $s0, $v0, 1
affiche26:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
li    $a0, 1
sgt   $a0, $v0, $a0
bgtz  $a0, affiche17
lw    $v0, 0($s1)
beq   $v0, $zero, affiche4
lw    $a0, 4($s1)
affiche63:
lw    $ra, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 12
j     writeln
affiche4:
li    $a0, 0
j     affiche63
affiche17:
sll   $v0, $v0, 2
addu  $v0, $s1, $v0
lw    $a0, 0($v0)
jal   write
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, -1
j     affiche26
# end affiche

# begin _main
_main23:
addiu $sp, $sp, -4
sw    $ra, 0($sp)
li    $v0, 65
sw    $v0, 0($gp)
jal   readln
sll   $v0, $v0, 1
addiu $v0, $v0, 1
sw    $v0, 4($gp)
lw    $v0, 4($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
lw    $ra, 0($sp)
addiu $sp, $sp, 4
j     triangle108
# end _main
