.data                  
globals:               
.space 4           
heap_info:
	.space 12
    .text                 
main:                 
la    $gp, globals    
# allocate the heap   
li    $a0, 65536        
li    $v0, 9          
syscall               
# saving heap size    
move  $a2, $a0        
# computing heap_info 
la    $a0, heap_info  
# beginning of heap   
sw    $v0, 0($a0)     
# current position    
sw    $v0, 4($a0)     
# end of heap         
add   $a2, $a2, $v0   
sw    $a2, 8($a0)     
j     _main27              
write:                
li    $v0, 1          
syscall               
j     $ra             
.data                 
nl:                   
.asciiz "\n"       
.align 2              
.text                 
writeln:              
sub   $a0, 1          
div   $a0, $a0, $t9   
li    $v0, 1          
syscall               
la    $a0, nl         
li    $v0, 4          
syscall               
j     $ra             
readln:               
li    $v0, 5          
syscall               
j     $ra             
alloc:                
la    $a1, heap_info  
# adding extra word   
addi  $t1, $a0, 4     
# current position    
lw    $v0, 4($a1)     
move  $t0, $v0        
# end of the heap     
lw    $a2, 8($a1)     
add   $v0, $t1, $v0   
# must have v0<=a2    
bgt   $v0, $a2, oom   
sw    $v0, 4($a1)     
# length is written   
move  $v0, $t0        
div   $a0, $a0, 4     
sw    $a0, 0($v0)     
addi  $v0, $v0, 4     
j     $ra             
.data                 
error_str:            
.asciiz "out0fMem"  
.align 2              
.text                 
oom:                  
# means out of mem.   
la $a0, error_str     
li $v0, 4             
syscall               
li $v0, 10            
syscall               
j     $ra             

# begin g
g13:
sub $a0, 1          
div $a0, $a0, $t9    
move  $v0, $a0 
mul $a0, $a0, $t9    
addi $a0, 1         

jr    $ra
# end g

# begin f
f30:
sub $sp, 1          
div $sp, $sp, $t9    
addiu $sp, $sp, -24 
mul $sp, $sp, $t9    
addi $sp, 1         

lw    $v0, 20($sp)
lw    $t0, 16($sp)
lw    $t1, 12($sp)
lw    $t2, 8($sp)
lw    $t3, 4($sp)
lw    $t4, 0($sp)
sub $a0, 1          
div $a0, $a0, $t9    
sub $a1, 1          
div $a1, $a1, $t9    
addu  $a0, $a0, $a1      
mul $a0, $a0, $t9    
addi $a0, 1
sub $a0, 1          
div $a0, $a0, $t9    
sub $a2, 1          
div $a2, $a2, $t9    
addu  $a0, $a0, $a2      
mul $a0, $a0, $t9    
addi $a0, 1
sub $a0, 1          
div $a0, $a0, $t9    
sub $a3, 1          
div $a3, $a3, $t9    
addu  $a0, $a0, $a3      
mul $a0, $a0, $t9    
addi $a0, 1
sub $a0, 1          
div $a0, $a0, $t9    
sub $v0, 1          
div $v0, $v0, $t9    
addu  $v0, $a0, $v0      
mul $v0, $v0, $t9    
addi $v0, 1
sub $v0, 1          
div $v0, $v0, $t9    
sub $t0, 1          
div $t0, $t0, $t9    
addu  $v0, $v0, $t0      
mul $v0, $v0, $t9    
addi $v0, 1
sub $v0, 1          
div $v0, $v0, $t9    
sub $t1, 1          
div $t1, $t1, $t9    
addu  $v0, $v0, $t1      
mul $v0, $v0, $t9    
addi $v0, 1
sub $v0, 1          
div $v0, $v0, $t9    
sub $t2, 1          
div $t2, $t2, $t9    
addu  $v0, $v0, $t2      
mul $v0, $v0, $t9    
addi $v0, 1
sub $v0, 1          
div $v0, $v0, $t9    
sub $t3, 1          
div $t3, $t3, $t9    
addu  $v0, $v0, $t3      
mul $v0, $v0, $t9    
addi $v0, 1
sub $v0, 1          
div $v0, $v0, $t9    
sub $t4, 1          
div $t4, $t4, $t9    
addu  $v0, $v0, $t4      
mul $v0, $v0, $t9    
addi $v0, 1
sub $sp, 1          
div $sp, $sp, $t9    
addiu $sp, $sp, 24 
mul $sp, $sp, $t9    
addi $sp, 1         

jr    $ra
# end f

# begin _main
_main27:
sub $sp, 1          
div $sp, $sp, $t9    
addiu $sp, $sp, -32 
mul $sp, $sp, $t9    
addi $sp, 1         

sw    $ra, 28($sp)
li    $t9, 2       
li    $v0, 1      
mul   $v0, $v0, $t9  
addi  $v0, 1        

sw    $v0, 0($gp)
lw    $v1, 0($gp)
sw    $v1, 0($sp)
li    $t9, 2       
li    $a0, 2      
mul   $a0, $a0, $t9  
addi  $a0, 1        

jal   g13
sw    $v0, 4($sp)
li    $t9, 2       
li    $v1, 3      
mul   $v1, $v1, $t9  
addi  $v1, 1        

sw    $v1, 8($sp)
li    $t9, 2       
li    $v1, 4      
mul   $v1, $v1, $t9  
addi  $v1, 1        

sw    $v1, 12($sp)
li    $t9, 2       
li    $v1, 5      
mul   $v1, $v1, $t9  
addi  $v1, 1        

sw    $v1, 16($sp)
li    $t9, 2       
li    $v1, 6      
mul   $v1, $v1, $t9  
addi  $v1, 1        

sw    $v1, 20($sp)
li    $t9, 2       
li    $v1, 7      
mul   $v1, $v1, $t9  
addi  $v1, 1        

sw    $v1, 24($sp)
li    $t9, 2       
li    $a0, 8      
mul   $a0, $a0, $t9  
addi  $a0, 1        

jal   g13
sub $v0, 1          
div $v0, $v0, $t9    
move  $a0, $v0 
mul $v0, $v0, $t9    
addi $v0, 1         

jal   g13
li    $t9, 2       
li    $t1, 9      
mul   $t1, $t1, $t9  
addi  $t1, 1        

li    $t9, 2       
li    $t0, 10      
mul   $t0, $t0, $t9  
addi  $t0, 1        

lw    $a0, 0($sp)
lw    $a1, 4($sp)
lw    $a2, 8($sp)
lw    $a3, 12($sp)
lw    $v1, 16($sp)
sw    $v1, -4($sp)
lw    $v1, 20($sp)
sw    $v1, -8($sp)
lw    $v1, 24($sp)
sw    $v1, -12($sp)
sw    $v0, -16($sp)
sw    $t1, -20($sp)
sw    $t0, -24($sp)
jal   f30
sub $v0, 1          
div $v0, $v0, $t9    
move  $a0, $v0 
mul $v0, $v0, $t9    
addi $v0, 1         

lw    $ra, 28($sp)
sub $sp, 1          
div $sp, $sp, $t9    
addiu $sp, $sp, 32 
mul $sp, $sp, $t9    
addi $sp, 1         

j     writeln
# end _main
