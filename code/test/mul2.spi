.data                  
globals:               
.space 4           
heap_info:
	.space 12
    .text                 
main:                 
la    $gp, globals    
# allocate the heap   
li    $a0, 65536        
li    $v0, 9          
syscall               
# saving heap size    
move  $a2, $a0        
# computing heap_info 
la    $a0, heap_info  
# beginning of heap   
sw    $v0, 0($a0)     
# current position    
sw    $v0, 4($a0)     
# end of heap         
add   $a2, $a2, $v0   
sw    $a2, 8($a0)     
j     _main45              
write:                
li    $v0, 1          
syscall               
j     $ra             
.data                 
nl:                   
.asciiz "\n"       
.align 2              
.text                 
writeln:              
li    $v0, 1          
syscall               
la    $a0, nl         
li    $v0, 4          
syscall               
j     $ra             
readln:               
li    $v0, 5          
syscall               
j     $ra             
alloc:                
la    $a1, heap_info  
# adding extra word   
addi  $t1, $a0, 4     
# current position    
lw    $v0, 4($a1)     
move  $t0, $v0        
# end of the heap     
lw    $a2, 8($a1)     
add   $v0, $t1, $v0   
# must have v0<=a2    
bgt   $v0, $a2, oom   
sw    $v0, 4($a1)     
# length is written   
move  $v0, $t0        
div   $a0, $a0, 4     
sw    $a0, 0($v0)     
addi  $v0, $v0, 4     
j     $ra             
.data                 
error_str:            
.asciiz "out0fMem"  
.align 2              
.text                 
oom:                  
# means out of mem.   
la $a0, error_str     
li $v0, 4             
syscall               
li $v0, 10            
syscall               
j     $ra             

# begin set
set29:
addiu $a1, $a1, -1
li    $v0, 2
div   $v0, $a1, $v0
sll   $v0, $v0, 2
addu  $v0, $a0, $v0
lw    $v0, 0($v0)
addiu $a1, $a2, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 2
addu  $v0, $v0, $a0
addiu $a1, $a3, -1
li    $a0, 2
div   $a0, $a1, $a0
sw    $a0, 0($v0)
jr    $ra
# end set

# begin pow
pow60:
addiu $sp, $sp, -12
sw    $ra, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s0, $a0
move  $s1, $a1
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
li    $a0, 1
beq   $v0, $a0, pow72
li    $a0, 2
div   $v0, $v0, $a0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
sll   $v0, $s1, 1
addiu $a1, $v0, 1
jal   pow60
addiu $a0, $v0, -1
li    $v0, 2
div   $a1, $a0, $v0
sll   $v0, $a1, 1
addiu $a1, $v0, 1
move  $a0, $a1
jal   matmult135
addiu $a0, $v0, -1
li    $v0, 2
div   $a1, $a0, $v0
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
li    $a0, 2
div   $a0, $v0, $a0
sll   $a0, $a0, 1
beq   $a0, $v0, pow9
sll   $v0, $s1, 1
addiu $a0, $v0, 1
sll   $v0, $a1, 1
addiu $a1, $v0, 1
jal   matmult135
addiu $a0, $v0, -1
li    $v0, 2
div   $s1, $a0, $v0
pow72:
move  $v0, $s1
lw    $ra, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 12
jr    $ra
pow9:
move  $s1, $a1
j     pow72
# end pow

# begin matrix
matrix46:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s3, $a0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $a0, $v0, 2
jal   alloc
move  $s1, $v0
li    $s2, 1
matrix26:
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $s3, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a1, $v0, $a0
bgtz  $a1, matrix15
move  $v0, $s1
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
matrix15:
sll   $v0, $v0, 2
addu  $s0, $s1, $v0
sll   $a0, $a0, 2
jal   alloc
sw    $v0, 0($s0)
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s2, $v0, 3
j     matrix26
# end matrix

# begin matmult
matmult135:
addiu $sp, $sp, -36
sw    $ra, 32($sp)
sw    $s7, 28($sp)
sw    $s6, 24($sp)
sw    $s5, 20($sp)
sw    $s4, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s6, $a0
move  $s7, $a1
lw    $v0, 0($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
jal   matrix46
addiu $a0, $v0, -1
li    $v0, 2
div   $s2, $a0, $v0
li    $s5, 1
matmult106:
addiu $a0, $s5, -1
li    $v0, 2
div   $a1, $a0, $v0
lw    $v0, 0($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, matmult97
move  $v0, $s2
lw    $ra, 32($sp)
lw    $s7, 28($sp)
lw    $s6, 24($sp)
lw    $s5, 20($sp)
lw    $s4, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 36
jr    $ra
matmult97:
li    $s4, 1
matmult96:
addiu $a0, $s4, -1
li    $v0, 2
div   $a1, $a0, $v0
lw    $v0, 0($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, matmult87
addiu $a0, $s5, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s5, $v0, 3
j     matmult106
matmult87:
li    $s3, 1
li    $a3, 1
matmult85:
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
lw    $a0, 0($gp)
addiu $a1, $a0, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a0, $v0, $a0
bgtz  $a0, matmult76
sll   $v0, $s2, 1
addiu $a0, $v0, 1
addiu $a1, $s5, -1
li    $v0, 2
div   $v0, $a1, $v0
sll   $v0, $v0, 1
addiu $a1, $v0, 1
addiu $a2, $s4, -1
li    $v0, 2
div   $v0, $a2, $v0
sll   $v0, $v0, 1
addiu $a2, $v0, 1
addiu $a3, $a3, -1
li    $v0, 2
div   $v0, $a3, $v0
sll   $v0, $v0, 1
addiu $a3, $v0, 1
jal   set29
addiu $a0, $s4, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s4, $v0, 3
j     matmult96
matmult76:
addiu $a1, $a3, -1
li    $a0, 2
div   $s1, $a1, $a0
sll   $a0, $s6, 1
addiu $a0, $a0, 1
addiu $a2, $s5, -1
li    $a1, 2
div   $a1, $a2, $a1
sll   $a1, $a1, 1
addiu $a1, $a1, 1
sll   $v0, $v0, 1
addiu $a2, $v0, 1
jal   get28
addiu $a0, $v0, -1
li    $v0, 2
div   $s0, $a0, $v0
sll   $v0, $s7, 1
addiu $a0, $v0, 1
addiu $a1, $s3, -1
li    $v0, 2
div   $v0, $a1, $v0
sll   $v0, $v0, 1
addiu $a1, $v0, 1
addiu $a2, $s4, -1
li    $v0, 2
div   $v0, $a2, $v0
sll   $v0, $v0, 1
addiu $a2, $v0, 1
jal   get28
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
mul   $v0, $s0, $v0
addu  $v0, $s1, $v0
sll   $v0, $v0, 1
addiu $a3, $v0, 1
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s3, $v0, 3
j     matmult85
# end matmult

# begin lire
lire77:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s3, $a0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
jal   matrix46
addiu $a0, $v0, -1
li    $v0, 2
div   $s0, $a0, $v0
li    $s2, 1
lire51:
addiu $a0, $s2, -1
li    $v0, 2
div   $a1, $a0, $v0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, lire43
move  $v0, $s0
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
lire43:
li    $s1, 1
lire42:
addiu $a0, $s1, -1
li    $v0, 2
div   $a1, $a0, $v0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, lire96
addiu $a0, $s2, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s2, $v0, 3
j     lire51
lire96:
jal   readln
sll   $v0, $v0, 1
addiu $v0, $v0, 1
sll   $a0, $s0, 1
addiu $a0, $a0, 1
addiu $a2, $s2, -1
li    $a1, 2
div   $a1, $a2, $a1
sll   $a1, $a1, 1
addiu $a1, $a1, 1
addiu $a3, $s1, -1
li    $a2, 2
div   $a2, $a3, $a2
sll   $a2, $a2, 1
addiu $a2, $a2, 1
addiu $a3, $v0, -1
li    $v0, 2
div   $v0, $a3, $v0
sll   $v0, $v0, 1
addiu $a3, $v0, 1
jal   set29
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 3
j     lire42
# end lire

# begin get
get28:
addiu $a1, $a1, -1
li    $v0, 2
div   $v0, $a1, $v0
sll   $v0, $v0, 2
addu  $v0, $a0, $v0
lw    $v0, 0($v0)
addiu $a1, $a2, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 2
addu  $v0, $v0, $a0
lw    $v0, 0($v0)
sll   $v0, $v0, 1
addiu $v0, $v0, 1
jr    $ra
# end get

# begin affiche
affiche57:
addiu $sp, $sp, -20
sw    $ra, 16($sp)
sw    $s3, 12($sp)
sw    $s2, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s2, $a0
move  $s3, $a1
li    $s1, 1
affiche42:
addiu $a0, $s1, -1
li    $v0, 2
div   $a1, $a0, $v0
addiu $a0, $s3, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, affiche34
lw    $ra, 16($sp)
lw    $s3, 12($sp)
lw    $s2, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 20
jr    $ra
affiche34:
li    $s0, 1
affiche33:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $s3, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a0, $v0, $a0
bgtz  $a0, affiche25
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 3
j     affiche42
affiche25:
addiu $a1, $s1, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 2
addu  $a0, $s2, $a0
lw    $a0, 0($a0)
sll   $v0, $v0, 2
addu  $v0, $a0, $v0
lw    $a0, 0($v0)
jal   writeln
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, 3
j     affiche33
# end affiche

# begin _main
_main45:
addiu $sp, $sp, -8
sw    $ra, 4($sp)
sw    $s0, 0($sp)
jal   readln
sll   $v0, $v0, 1
addiu $v0, $v0, 1
sw    $v0, 0($gp)
lw    $v0, 0($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, 1
move  $a0, $s0
jal   lire77
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a1, $v0, 1
move  $a0, $s0
jal   pow60
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $a0, $v0, 1
lw    $v0, 0($gp)
addiu $a1, $v0, -1
li    $v0, 2
div   $v0, $a1, $v0
sll   $v0, $v0, 1
addiu $a1, $v0, 1
lw    $ra, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 8
j     affiche57
# end _main
