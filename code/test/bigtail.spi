.data                  
globals:               
.space 0           
heap_info:
	.space 12
    .text                 
main:                 
la    $gp, globals    
# allocate the heap   
li    $a0, 65536        
li    $v0, 9          
syscall               
# saving heap size    
move  $a2, $a0        
# computing heap_info 
la    $a0, heap_info  
# beginning of heap   
sw    $v0, 0($a0)     
# current position    
sw    $v0, 4($a0)     
# end of heap         
add   $a2, $a2, $v0   
sw    $a2, 8($a0)     
j     _main30              
write:                
li    $v0, 1          
syscall               
j     $ra             
.data                 
nl:                   
.asciiz "\n"       
.align 2              
.text                 
writeln:              
li    $v0, 1          
syscall               
la    $a0, nl         
li    $v0, 4          
syscall               
j     $ra             
readln:               
li    $v0, 5          
syscall               
j     $ra             
alloc:                
la    $a1, heap_info  
# adding extra word   
addi  $t1, $a0, 4     
# current position    
lw    $v0, 4($a1)     
move  $t0, $v0        
# end of the heap     
lw    $a2, 8($a1)     
add   $v0, $t1, $v0   
# must have v0<=a2    
bgt   $v0, $a2, oom   
sw    $v0, 4($a1)     
# length is written   
move  $v0, $t0        
div   $a0, $a0, 4     
sw    $a0, 0($v0)     
addi  $v0, $v0, 4     
j     $ra             
.data                 
error_str:            
.asciiz "out0fMem"  
.align 2              
.text                 
oom:                  
# means out of mem.   
la $a0, error_str     
li $v0, 4             
syscall               
li $v0, 10            
syscall               
j     $ra             

# begin somme2
somme2_88:
addiu $sp, $sp, -20
sw    $ra, 0($sp)
lw    $t3, 16($sp)
lw    $t1, 12($sp)
lw    $t0, 8($sp)
lw    $t2, 4($sp)
addiu $t4, $a0, -1
li    $v0, 2
div   $v0, $t4, $v0
beq   $v0, $zero, somme2_64
somme2_29:
addiu $a1, $a1, -1
li    $v0, 2
div   $v0, $a1, $v0
addiu $a2, $a2, -1
li    $a1, 2
div   $a1, $a2, $a1
addiu $a3, $a3, -1
li    $a2, 2
div   $a2, $a3, $a2
addiu $t3, $t3, -1
li    $a3, 2
div   $a3, $t3, $a3
addiu $t3, $t1, -1
li    $t1, 2
div   $t1, $t3, $t1
addiu $t3, $t0, -1
li    $t0, 2
div   $t0, $t3, $t0
addiu $t3, $a0, -1
li    $a0, 2
div   $a0, $t3, $a0
addiu $t3, $t2, -1
li    $t2, 2
div   $t2, $t3, $t2
addu  $t2, $a0, $t2
move  $a0, $v0
sw    $t1, -4($sp)
sw    $t0, -8($sp)
sw    $zero, -12($sp)
sw    $t2, -16($sp)
jal   somme2_88
sll   $v0, $v0, 1
addiu $v0, $v0, 1
somme2_99:
lw    $ra, 0($sp)
addiu $sp, $sp, 20
jr    $ra
somme2_64:
addiu $t4, $a1, -1
li    $v0, 2
div   $v0, $t4, $v0
bne   $v0, $zero, somme2_29
addiu $t4, $a2, -1
li    $v0, 2
div   $v0, $t4, $v0
bne   $v0, $zero, somme2_29
addiu $t4, $a3, -1
li    $v0, 2
div   $v0, $t4, $v0
bne   $v0, $zero, somme2_29
addiu $t4, $t3, -1
li    $v0, 2
div   $v0, $t4, $v0
bne   $v0, $zero, somme2_29
addiu $t4, $t1, -1
li    $v0, 2
div   $v0, $t4, $v0
bne   $v0, $zero, somme2_29
addiu $t4, $t0, -1
li    $v0, 2
div   $v0, $t4, $v0
bne   $v0, $zero, somme2_29
addiu $a0, $t2, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $v0, $v0, 1
j     somme2_99
# end somme2

# begin somme
somme88:
addiu $sp, $sp, -20
sw    $ra, 0($sp)
lw    $t3, 16($sp)
lw    $t2, 12($sp)
lw    $t5, 8($sp)
lw    $t6, 4($sp)
addiu $t0, $a0, -1
li    $v0, 2
div   $v0, $t0, $v0
beq   $v0, $zero, somme64
somme28:
addiu $a0, $a0, -1
li    $v0, 2
div   $v0, $a0, $v0
addiu $a1, $a1, -1
li    $a0, 2
div   $t0, $a1, $a0
addiu $a1, $a2, -1
li    $a0, 2
div   $t1, $a1, $a0
addiu $a1, $a3, -1
li    $a0, 2
div   $t4, $a1, $a0
addiu $a1, $t3, -1
li    $a0, 2
div   $t3, $a1, $a0
addiu $a1, $t2, -1
li    $a0, 2
div   $t2, $a1, $a0
addiu $a1, $t5, -1
li    $a0, 2
div   $a0, $a1, $a0
addiu $a2, $t6, -1
li    $a1, 2
div   $a1, $a2, $a1
addu  $t5, $a0, $a1
move  $a0, $zero
move  $a1, $v0
move  $a2, $t0
move  $a3, $t1
sw    $t4, -4($sp)
sw    $t3, -8($sp)
sw    $t2, -12($sp)
sw    $t5, -16($sp)
jal   somme88
sll   $v0, $v0, 1
addiu $v0, $v0, 1
somme99:
lw    $ra, 0($sp)
addiu $sp, $sp, 20
jr    $ra
somme64:
addiu $t0, $a1, -1
li    $v0, 2
div   $v0, $t0, $v0
bne   $v0, $zero, somme28
addiu $t0, $a2, -1
li    $v0, 2
div   $v0, $t0, $v0
bne   $v0, $zero, somme28
addiu $t0, $a3, -1
li    $v0, 2
div   $v0, $t0, $v0
bne   $v0, $zero, somme28
addiu $t0, $t3, -1
li    $v0, 2
div   $v0, $t0, $v0
bne   $v0, $zero, somme28
addiu $t0, $t2, -1
li    $v0, 2
div   $v0, $t0, $v0
bne   $v0, $zero, somme28
addiu $t0, $t5, -1
li    $v0, 2
div   $v0, $t0, $v0
bne   $v0, $zero, somme28
addiu $a0, $t6, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $v0, $v0, 1
j     somme99
# end somme

# begin _main
_main30:
addiu $sp, $sp, -4
sw    $ra, 0($sp)
li    $a0, 1
li    $a1, 2
li    $a2, 3
li    $a3, 4
li    $t1, 5
li    $t0, 6
li    $v0, 7
sw    $t1, -4($sp)
sw    $t0, -8($sp)
sw    $v0, -12($sp)
sw    $zero, -16($sp)
jal   somme88
move  $a0, $v0
jal   writeln
li    $a0, 1
li    $a1, 2
li    $a2, 3
li    $a3, 4
li    $t1, 5
li    $t0, 6
li    $v0, 7
sw    $t1, -4($sp)
sw    $t0, -8($sp)
sw    $v0, -12($sp)
sw    $zero, -16($sp)
jal   somme2_88
move  $a0, $v0
lw    $ra, 0($sp)
addiu $sp, $sp, 4
j     writeln
# end _main
