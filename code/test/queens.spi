.data                  
globals:               
.space 20           
heap_info:
	.space 12
    .text                 
main:                 
la    $gp, globals    
# allocate the heap   
li    $a0, 65536        
li    $v0, 9          
syscall               
# saving heap size    
move  $a2, $a0        
# computing heap_info 
la    $a0, heap_info  
# beginning of heap   
sw    $v0, 0($a0)     
# current position    
sw    $v0, 4($a0)     
# end of heap         
add   $a2, $a2, $v0   
sw    $a2, 8($a0)     
j     _main46              
write:                
li    $v0, 1          
syscall               
j     $ra             
.data                 
nl:                   
.asciiz "\n"       
.align 2              
.text                 
writeln:              
li    $v0, 1          
syscall               
la    $a0, nl         
li    $v0, 4          
syscall               
j     $ra             
readln:               
li    $v0, 5          
syscall               
j     $ra             
alloc:                
la    $a1, heap_info  
# adding extra word   
addi  $t1, $a0, 4     
# current position    
lw    $v0, 4($a1)     
move  $t0, $v0        
# end of the heap     
lw    $a2, 8($a1)     
add   $v0, $t1, $v0   
# must have v0<=a2    
bgt   $v0, $a2, oom   
sw    $v0, 4($a1)     
# length is written   
move  $v0, $t0        
div   $a0, $a0, 4     
sw    $a0, 0($v0)     
addi  $v0, $v0, 4     
j     $ra             
.data                 
error_str:            
.asciiz "out0fMem"  
.align 2              
.text                 
oom:                  
# means out of mem.   
la $a0, error_str     
li $v0, 4             
syscall               
li $v0, 10            
syscall               
j     $ra             

# begin try
try148:
addiu $sp, $sp, -12
sw    $ra, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
move  $s1, $a0
addiu $a0, $s1, -1
li    $v0, 2
div   $a1, $a0, $v0
lw    $v0, 12($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
beq   $a1, $v0, try172
li    $s0, 1
try126:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
lw    $a0, 12($gp)
addiu $a1, $a0, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a0, $v0, $a0
bgtz  $a0, try117
lw    $ra, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 12
jr    $ra
try117:
lw    $a0, 16($gp)
sll   $a1, $v0, 2
addu  $a1, $a0, $a1
lw    $a0, 0($a1)
bgtz  $a0, try6
lw    $a2, 4($gp)
addiu $a3, $s1, -1
li    $a0, 2
div   $a0, $a3, $a0
addu  $a3, $v0, $a0
sll   $a3, $a3, 2
addu  $a2, $a2, $a3
lw    $a3, 0($a2)
bgtz  $a3, try6
lw    $a3, 8($gp)
subu  $t0, $v0, $a0
sll   $t0, $t0, 2
addu  $a3, $a3, $t0
lw    $t0, 28($a3)
bgtz  $t0, try6
li    $t0, 1
sw    $t0, 0($a1)
li    $a1, 1
sw    $a1, 0($a2)
li    $a1, 1
sw    $a1, 28($a3)
lw    $a1, 0($gp)
sll   $a2, $a0, 2
addu  $a1, $a1, $a2
sw    $v0, 0($a1)
addiu $a0, $a0, 1
jal   try148
lw    $a0, 16($gp)
addiu $a1, $s0, -1
li    $v0, 2
div   $v0, $a1, $v0
sll   $a1, $v0, 2
addu  $a0, $a0, $a1
sw    $zero, 0($a0)
lw    $a1, 4($gp)
addiu $a2, $s1, -1
li    $a0, 2
div   $a0, $a2, $a0
addu  $a2, $v0, $a0
sll   $a2, $a2, 2
addu  $a1, $a1, $a2
sw    $zero, 0($a1)
lw    $a1, 8($gp)
subu  $v0, $v0, $a0
sll   $v0, $v0, 2
addu  $v0, $a1, $v0
sw    $zero, 28($v0)
try6:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, 3
j     try126
try172:
lw    $ra, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 12
j     printboard63
# end try

# begin printboard
printboard63:
addiu $sp, $sp, -12
sw    $ra, 8($sp)
sw    $s1, 4($sp)
sw    $s0, 0($sp)
li    $s1, 1
printboard50:
addiu $a0, $s1, -1
li    $v0, 2
div   $a1, $a0, $v0
lw    $v0, 12($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
slt   $v0, $a1, $v0
bgtz  $v0, printboard41
li    $a0, 2
lw    $ra, 8($sp)
lw    $s1, 4($sp)
lw    $s0, 0($sp)
addiu $sp, $sp, 12
j     writeln
printboard41:
li    $s0, 1
printboard40:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
lw    $a0, 12($gp)
addiu $a1, $a0, -1
li    $a0, 2
div   $a0, $a1, $a0
slt   $a0, $v0, $a0
bgtz  $a0, printboard31
li    $a0, 2
jal   writeln
addiu $a0, $s1, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s1, $v0, 3
j     printboard50
printboard31:
lw    $a2, 0($gp)
addiu $a1, $s1, -1
li    $a0, 2
div   $a0, $a1, $a0
sll   $a0, $a0, 2
addu  $a0, $a2, $a0
lw    $a0, 0($a0)
beq   $a0, $v0, printboard20
li    $a0, 0
jal   write
printboard16:
addiu $a0, $s0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 1
addiu $s0, $v0, 3
j     printboard40
printboard20:
li    $a0, 1
jal   write
j     printboard16
# end printboard

# begin _main
_main46:
addiu $sp, $sp, -4
sw    $ra, 0($sp)
jal   readln
sll   $v0, $v0, 1
addiu $v0, $v0, 1
sw    $v0, 12($gp)
lw    $v0, 12($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $a0, $v0, 2
jal   alloc
sw    $v0, 16($gp)
lw    $v0, 12($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $a0, $v0, 2
jal   alloc
sw    $v0, 0($gp)
lw    $v0, 12($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 3
addiu $a0, $v0, -4
jal   alloc
sw    $v0, 4($gp)
lw    $v0, 12($gp)
addiu $a0, $v0, -1
li    $v0, 2
div   $v0, $a0, $v0
sll   $v0, $v0, 3
addiu $a0, $v0, -4
jal   alloc
sw    $v0, 8($gp)
li    $a0, 0
lw    $ra, 0($sp)
addiu $sp, $sp, 4
j     try148
# end _main
